@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<head>
    <style>
        #logout-button{
            background-color: green;
            border: white;
            color: white
        }
    </style>
</head>
<ul class="navbar-nav" id="navbar-links">
</ul>

<script type="module">
    // Import the functions you need from the SDKs you need
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.5.0/firebase-app.js";
    import { getAnalytics } from "https://www.gstatic.com/firebasejs/10.5.0/firebase-analytics.js";
    import { getAuth, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/10.5.0/firebase-auth.js";

    const firebaseConfig = {
        apiKey: "AIzaSyCD_fq2egRwv4Xh4z8XcLn9TIaY0szgZFo",
        authDomain: "wilapp-ec2d3.firebaseapp.com",
        databaseURL: "https://wilapp-ec2d3-default-rtdb.firebaseio.com",
        projectId: "wilapp-ec2d3",
        storageBucket: "wilapp-ec2d3.appspot.com",
        messagingSenderId: "128702374525",
        appId: "1:128702374525:web:44f6352a987fee7ecf4714",
        measurementId: "G-RVRWDZKJ4H"
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const analytics = getAnalytics(app);
    const auth = getAuth(app);

    const updateUI = (user) => {
        const navbarLinks = document.getElementById("navbar-links");

        if (user) {
            // User is signed in
            navbarLinks.innerHTML = `
                        <li class="nav-item">
                            <span class="nav-link text-dark">Hello ${user.email}!</span> |
                        </li>
                        <li class="nav-item">
                            <button class="nav-link" id="logout-button">Logout</button>
                        </li>
                    `;
            document.getElementById("logout-button").addEventListener("click", () => {
                console.log("Logout button clicked");
                signOut(auth).then(() => {
                    console.log("User signed out successfully");
                    // Redirect or update the UI as needed
                    setTimeout(() => {
                        window.location.href = "../Home/Index";
                    }, 2000);
                }).catch((error) => {
                    console.error("Error signing out:", error);
                });
            });
        } else {
            // User is signed out
            navbarLinks.innerHTML = `
                        <li class="nav-item">
                            <a class="nav-link text-dark" href="../Home/Register" style="margin-right: 8px">Register</a> |
                        </li>
                        <li class="nav-item">
                            <a class "nav-link text-dark" href="../Home/Login">Login</a>
                        </li>
                    `;
        }
    };

    // Listen for changes in user authentication state
    onAuthStateChanged(auth, (user) => {
        console.log("User state changed:", user);
        updateUI(user);
    });
</script>